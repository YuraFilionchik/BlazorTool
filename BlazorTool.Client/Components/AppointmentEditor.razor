@using BlazorTool.Client.Models
@using BlazorTool.Client.Services
@using Microsoft.AspNetCore.Components.Forms
@using Telerik.Blazor.Components.Scheduler.Models
@inject AppointmentService ApptService

<EditForm Model="@Appointment" OnValidSubmit="@SaveAppointment">
    <DataAnnotationsValidator />
    <label class="width100">
        Title:<br />
        <TelerikTextBox @bind-Value="@Appointment.Title" Width="100%" />
    </label>
    <br />
     <div class="datetime-row">
        <label>
            Start:<br />
            <TelerikDateTimePicker @bind-Value="@Appointment.Start" Width="100%" />
        </label>
        <label>
            End:<br />
            <TelerikDateTimePicker @bind-Value="@Appointment.End" Width="100%" />
        </label>
    </div>
    <ValidationSummary />
      <div class="button-row">
    <TelerikButton ThemeColor="@ThemeConstants.Button.ThemeColor.Primary">Save</TelerikButton>

    @* These buttons do not invoke validation, you can always delete an appointment or stop editing *@
    <TelerikButton OnClick="@CancelEditing" ButtonType="ButtonType.Button">Cancel</TelerikButton>
    <TelerikButton OnClick="@DeleteAppointment" ButtonType="ButtonType.Button">Delete</TelerikButton>
    </div>
</EditForm>
<br />
<WorkOrderComponent WorkOrder="@Appointment" 
    ListPersons=@ListPersons 
    ListDepartments="@ListDepartments"
    ListDicts="@ListDicts"
    isEditable=@isEditable></WorkOrderComponent>

@code{
    //communcation with the parent component where the scheduler is
    [Parameter] public SchedulerAppointment Appointment { get; set; }
    [Parameter] public EventCallback<SchedulerAppointment?> OnAppointmentChanged { get; set; }
    [Parameter] public List<string>? ListPersons { get; set; }
    [Parameter] public bool isEditable { get; set; } = false;
    [Parameter] public List<Dict>? ListDicts { get; set; }
    [Parameter] public List<string>? ListDepartments { get; set; }

    private DateTime? _start_Init_value;
    private DateTime? _end_Init_value;
    private string _title_Init_value;

    protected override void OnInitialized()
    {
        _start_Init_value = Appointment.Start;
        _end_Init_value = Appointment.End;
        _title_Init_value = Appointment.Title;
    }

    async Task SaveAppointment()
    {
        await ApptService.UpdateAppointment(Appointment);
        await OnAppointmentChanged.InvokeAsync(Appointment);
    }

    async Task DeleteAppointment()
    {
        await ApptService.DeleteAppointment(Appointment);
        await OnAppointmentChanged.InvokeAsync(null);
    }

    async Task CancelEditing()
    {
        Appointment.Start = _start_Init_value;
        Appointment.End = _end_Init_value;
        Appointment.Title = _title_Init_value;
        await OnAppointmentChanged.InvokeAsync(Appointment);
    }
}